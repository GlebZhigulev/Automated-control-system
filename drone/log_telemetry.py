from pymavlink import mavutil
import csv
import time
import sys
import signal

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É
if len(sys.argv) < 2:
    print("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É telemetry.csv")
    sys.exit(1)

output_path = sys.argv[1]

# MAVLink —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (—Å–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –ø–æ—Ä—Ç, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
connection = mavutil.mavlink_connection('udp:localhost:14540')
connection.wait_heartbeat()
print("[üì°] –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –∞–≤—Ç–æ–ø–∏–ª–æ—Ç—É")

# –û—Ç–∫—Ä—ã—Ç–∏–µ CSV-—Ñ–∞–π–ª–∞
file = open(output_path, mode='w', newline='')
writer = csv.writer(file)
writer.writerow(['timestamp', 'latitude', 'longitude', 'altitude'])

running = True

def handle_sigint(sig, frame):
    global running
    running = False

signal.signal(signal.SIGINT, handle_sigint)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
while running:
    msg = connection.recv_match(type='GLOBAL_POSITION_INT', blocking=True, timeout=1)
    if msg is None:
        continue

    timestamp = time.time()
    lat = msg.lat / 1e7         # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏–∑ int32 -> float
    lon = msg.lon / 1e7
    alt = msg.relative_alt / 1000.0  # –º–º ‚Üí –º

    writer.writerow([timestamp, lat, lon, alt])
    file.flush()

    print(f"[‚úì] {lat:.6f}, {lon:.6f}, {alt:.1f}m")

file.close()
print("[‚úÖ] –¢–µ–ª–µ–º–µ—Ç—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
